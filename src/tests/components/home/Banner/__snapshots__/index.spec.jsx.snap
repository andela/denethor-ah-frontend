// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render banner with login correctly 1`] = `
<div
  className="banner"
>
  <div
    className="banner__slogan"
  >
    <div>
      <h1
        className="banner__yellow-text hidden-on-mobile"
      >
        The place 
        <br />
         writers love...
      </h1>
      <h1>
        <span
          className="banner__yellow-text-mobile"
        >
          Great writers,
        </span>
        <br />
        Quality Content
      </h1>
      <button
        onClick={[MockFunction]}
      >
        Get Started
      </button>
    </div>
  </div>
  <div
    className="banner__screen banner__screen--login"
  >
    <ToastContainer
      autoClose={5000}
      bodyClassName={null}
      className={null}
      closeButton={
        <CloseButton
          ariaLabel="close"
        />
      }
      closeOnClick={true}
      draggable={true}
      draggablePercent={80}
      hideProgressBar={false}
      newestOnTop={false}
      pauseOnFocusLoss={true}
      pauseOnHover={true}
      position="top-right"
      progressClassName={null}
      progressStyle={null}
      rtl={false}
      style={null}
      toastClassName={null}
      transition={[Function]}
    />
    <CSSTransitionGroup
      transitionAppear={true}
      transitionAppearTimeout={800}
      transitionEnter={true}
      transitionEnterTimeout={800}
      transitionLeave={true}
      transitionLeaveTimeout={400}
      transitionName="background"
    >
      <Connect(Login)
        key="Login"
      />
    </CSSTransitionGroup>
  </div>
</div>
`;

exports[`Should render banner with signup correctly 1`] = `
<div
  className="banner"
>
  <div
    className="banner__slogan"
  >
    <div>
      <h1
        className="banner__yellow-text hidden-on-mobile"
      >
        The place 
        <br />
         writers love...
      </h1>
      <h1>
        <span
          className="banner__yellow-text-mobile"
        >
          Great writers,
        </span>
        <br />
        Quality Content
      </h1>
      <button
        onClick={[MockFunction]}
      >
        Get Started
      </button>
    </div>
  </div>
  <div
    className="banner__screen banner__screen--signup"
  >
    <ToastContainer
      autoClose={5000}
      bodyClassName={null}
      className={null}
      closeButton={
        <CloseButton
          ariaLabel="close"
        />
      }
      closeOnClick={true}
      draggable={true}
      draggablePercent={80}
      hideProgressBar={false}
      newestOnTop={false}
      pauseOnFocusLoss={true}
      pauseOnHover={true}
      position="top-right"
      progressClassName={null}
      progressStyle={null}
      rtl={false}
      style={null}
      toastClassName={null}
      transition={[Function]}
    />
    <CSSTransitionGroup
      transitionAppear={true}
      transitionAppearTimeout={800}
      transitionEnter={true}
      transitionEnterTimeout={800}
      transitionLeave={true}
      transitionLeaveTimeout={400}
      transitionName="background"
    >
      <_default
        key="Signup"
      />
    </CSSTransitionGroup>
  </div>
</div>
`;

exports[`Should render banner with stats correctly 1`] = `
<div
  className="banner"
>
  <div
    className="banner__slogan"
  >
    <div>
      <h1
        className="banner__yellow-text hidden-on-mobile"
      >
        The place 
        <br />
         writers love...
      </h1>
      <h1>
        <span
          className="banner__yellow-text-mobile"
        >
          Great writers,
        </span>
        <br />
        Quality Content
      </h1>
      <button
        onClick={[MockFunction]}
      >
        Get Started
      </button>
    </div>
  </div>
  <div
    className="banner__screen banner__screen--stats"
  >
    <ToastContainer
      autoClose={5000}
      bodyClassName={null}
      className={null}
      closeButton={
        <CloseButton
          ariaLabel="close"
        />
      }
      closeOnClick={true}
      draggable={true}
      draggablePercent={80}
      hideProgressBar={false}
      newestOnTop={false}
      pauseOnFocusLoss={true}
      pauseOnHover={true}
      position="top-right"
      progressClassName={null}
      progressStyle={null}
      rtl={false}
      style={null}
      toastClassName={null}
      transition={[Function]}
    />
    <CSSTransitionGroup
      transitionAppear={true}
      transitionAppearTimeout={800}
      transitionEnter={true}
      transitionEnterTimeout={800}
      transitionLeave={true}
      transitionLeaveTimeout={400}
      transitionName="background"
    >
      <Connect(Stats)
        key="Stats"
      />
    </CSSTransitionGroup>
  </div>
</div>
`;
